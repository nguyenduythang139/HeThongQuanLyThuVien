/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Classes/Class.java to edit this template
 */
package com.quanlythuvien.views;
import java.util.Date;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.geometry.Rectangle2D;
import javafx.scene.Scene;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.scene.text.*;
import javafx.stage.Screen;
import javafx.stage.Stage;
import com.quanlythuvien.models.Book;
import javafx.beans.property.SimpleObjectProperty;
import com.quanlythuvien.utils.menuBarComponent;
import java.text.SimpleDateFormat;

/**
 *
 * @author admin
 */
public class ManageBookView {
    public void start(Stage stage) {
        // Thanh menu
        VBox menuBar = menuBarComponent.createMenuBar(stage);

        // Form nhap thong tin sach
        Label lbTitle = new Label("üìñ Qu·∫£n L√Ω S√°ch");
        lbTitle.setFont(Font.font(20));
        lbTitle.setStyle("-fx-text-fill: #1D774E;");

        Label lbBookName = new Label("T√™n s√°ch:");
        TextField tfBookName = new TextField();
        tfBookName.setPromptText("Nh·∫≠p t√™n s√°ch");
        tfBookName.setStyle("-fx-background-color: white; -fx-border-width: 1; -fx-border-color: #D5D5D5; -fx-border-radius: 4; -fx-prompt-text-fill: grey;");
        VBox vbBookName = new VBox(3, lbBookName, tfBookName);

        Label lbAuthor = new Label("T√°c gi·∫£:");
        TextField tfAuthor = new TextField();
        tfAuthor.setPromptText("Nh·∫≠p t√°c gi·∫£");
        tfAuthor.setStyle("-fx-background-color: white; -fx-border-width: 1; -fx-border-color: #D5D5D5; -fx-border-radius: 4; -fx-prompt-text-fill: grey;");
        VBox vbAuthor = new VBox(3, lbAuthor, tfAuthor);
        
        Label lbPublisher = new Label("Nh√† xu·∫•t b·∫£n:");
        TextField tfPublisher = new TextField();
        tfPublisher.setPromptText("Nh·∫≠p nh√† xu·∫•t b·∫£n");
        tfPublisher.setStyle("-fx-background-color: white; -fx-border-width: 1; -fx-border-color: #D5D5D5; -fx-border-radius: 4; -fx-prompt-text-fill: grey;");
        VBox vbPublisher = new VBox(3, lbPublisher, tfPublisher);


        Label lbCategory = new Label("Th·ªÉ lo·∫°i:");
        ComboBox<String> cbCategory = new ComboBox<>();
        cbCategory.getItems().addAll("Ti·ªÉu thuy·∫øt", "Gi√°o tr√¨nh", "Khoa h·ªçc", "Truy·ªán tranh");
        cbCategory.setPromptText("Ch·ªçn th·ªÉ lo·∫°i");
        cbCategory.setPrefWidth(300);
        cbCategory.setStyle("-fx-background-color: white; -fx-border-width: 1; -fx-border-color: #D5D5D5; -fx-border-radius: 4; -fx-prompt-text-fill: grey;");
        VBox vbCategory = new VBox(3, lbCategory, cbCategory);

        Label lbPublicDate = new Label("Ng√†y xu·∫•t b·∫£n");
        DatePicker dpPublicDate = new DatePicker();
        dpPublicDate.setPromptText("Chon ng√†y xu·∫•t b·∫£n");
        dpPublicDate.setPrefWidth(300);
        dpPublicDate.setStyle("-fx-background-color: white; -fx-border-width: 1; -fx-border-color: #D5D5D5; -fx-border-radius: 4; -fx-prompt-text-fill: grey;");
        VBox vbPublicDate = new VBox(3, lbPublicDate, dpPublicDate);
        
        Label lbQuantity = new Label("S·ªë l∆∞·ª£ng");
        Spinner<Integer> spQuantity = new Spinner<>(1, 1000, 10);
        spQuantity.setPromptText("Nh·∫≠p s·ªë l∆∞·ª£ng");
        spQuantity.setPrefWidth(300);
        spQuantity.setStyle("-fx-background-color: white; -fx-border-width: 1; -fx-border-color: #D5D5D5; -fx-border-radius: 4; -fx-prompt-text-fill: grey;");
        VBox vbQuantity = new VBox(3, lbQuantity, spQuantity);

        Label lbLanguage = new Label("Ng√¥n ng·ªØ:");
        ComboBox<String> cbLanguage = new ComboBox<>();
        cbLanguage.getItems().addAll("Ti·∫øng Vi·ªát", "Ti·∫øng Anh", "Ti·∫øng Nga", "Ti·∫øng Ph√°p", "Ti·∫øng Trung");
        cbLanguage.setPromptText("Ch·ªçn ng√¥n ng·ªØ");
        cbLanguage.setPrefWidth(300);
        cbLanguage.setStyle("-fx-background-color: white; -fx-border-width: 1; -fx-border-color: #D5D5D5; -fx-border-radius: 4; -fx-prompt-text-fill: grey;");
        VBox vbLanguage = new VBox(3, lbLanguage, cbLanguage);
        
        Label lbState = new Label("T√¨nh tr·∫°ng:");
        ComboBox<String> cbState = new ComboBox<>();
        cbState.getItems().addAll("C√≤n h√†ng", "H·∫øt h√†ng");
        cbState.setPromptText("Ch·ªçn t√¨nh tr·∫°ng");
        cbState.setPrefWidth(300);
        cbState.setStyle("-fx-background-color: white; -fx-border-width: 1; -fx-border-color: #D5D5D5; -fx-border-radius: 4; -fx-prompt-text-fill: grey;");
        VBox vbState = new VBox(3, lbState, cbState);
        
        Label lbLocation = new Label("V·ªã tr√≠ l∆∞u tr·ªØ:");
        TextField tfLocation = new TextField();
        tfLocation.setPromptText("Nh·∫≠p v·ªã tr√≠ l∆∞u tr·ªØ");
        tfLocation.setStyle("-fx-background-color: white; -fx-border-width: 1; -fx-border-color: #D5D5D5; -fx-border-radius: 4; -fx-prompt-text-fill: grey;");
        VBox vbLocation = new VBox(3, lbLocation, tfLocation);

        // Nut them xoa sua reset
        HBox buttonBox1 = new HBox(20,
                createActionButton("Th√™m", "#1E56A0"),
                createActionButton("C·∫≠p nh·∫≠t", "#2E8B57")             
        );
        HBox buttonBox2 = new HBox(20, 
                createActionButton("Xo√°", "#B22222"),
                createActionButton("Reset", "#6A5ACD")
        );
        buttonBox1.setAlignment(Pos.CENTER);
        buttonBox2.setAlignment(Pos.CENTER);

        Rectangle2D screenSize = Screen.getPrimary().getVisualBounds();
        VBox formBox = new VBox(10,
                lbTitle,
                vbBookName, vbAuthor, vbPublisher, vbCategory, vbPublicDate, vbQuantity, vbLanguage, vbState, vbLocation,
                buttonBox1, buttonBox2
        );
        formBox.setPadding(new Insets(20));
        formBox.setPrefWidth(300);
        formBox.setPrefHeight(screenSize.getHeight());
        formBox.setStyle("-fx-background-color: #F8F8F8; -fx-border-color: #ccc;");
        formBox.setMargin(buttonBox1, new Insets(30, 0, 0, 0));
        
        ScrollPane formScrollPane = new ScrollPane();
        formScrollPane.setContent(formBox);
        formScrollPane.setFitToWidth(true);
        
        // Bang hien thi danh sach sach
        TableView<Book> table = new TableView<>();
        table.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);

        TableColumn<Book, Integer> colId = new TableColumn<>("M√£ s√°ch");
        TableColumn<Book, String> colName = new TableColumn<>("T√™n s√°ch");
        TableColumn<Book, String> colAuthor = new TableColumn<>("T√°c gi·∫£");
        TableColumn<Book, String> colCategory = new TableColumn<>("Th·ªÉ lo·∫°i");
        TableColumn<Book, Date> colPublicDate = new TableColumn<>("Ng√†y");
        TableColumn<Book, Integer> colQuantity = new TableColumn<>("S·ªë l∆∞·ª£ng");
        TableColumn<Book, String> colLanguage = new TableColumn<>("Ng√¥n ng·ªØ");
        TableColumn<Book, String> colState = new TableColumn<>("Tr·∫°ng th√°i");
        TableColumn<Book, String> colLocation = new TableColumn<>("V·ªã tr√≠");
        
        hoverColumn(colAuthor);
        hoverColumn(colCategory);
        hoverColumn(colPublicDate);
        hoverColumn(colQuantity);
        hoverColumn(colName);

        colId.setCellValueFactory(cellData -> cellData.getValue().idProperty().asObject());
        colName.setCellValueFactory(cellData -> cellData.getValue().nameProperty());
        colAuthor.setCellValueFactory(cellData -> cellData.getValue().authorProperty());
        colCategory.setCellValueFactory(cellData -> cellData.getValue().categoryProperty());
        colPublicDate.setCellValueFactory(cellData -> new SimpleObjectProperty<>(cellData.getValue().getPublicDate())); 
        formatDateColumn(colPublicDate, "dd/MM/yyyy");
        colQuantity.setCellValueFactory(cellData -> cellData.getValue().quantityProperty().asObject());
        colLanguage.setCellValueFactory(cellData -> cellData.getValue().languageProperty());
        colState.setCellValueFactory(cellData -> cellData.getValue().stateProperty());
        colLocation.setCellValueFactory(cellData -> cellData.getValue().locationProperty());
        
     

        table.getColumns().addAll(colId, colName, colAuthor, colCategory, colPublicDate, colQuantity, colLanguage, colState, colLocation);
        ObservableList<Book> books = FXCollections.observableArrayList(
            new Book(1, "L·∫≠p tr√¨nh Java", "Nguy·ªÖn VƒÉn A", "Gi√°o tr√¨nh", new Date(), 10, "Ti·∫øng Vi·ªát", "C√≤n h√†ng", "K·ªá A1"),
            new Book(2, "Doraemon", "Fujiko F. Fujio", "Truy·ªán tranh", new Date(), 20, "Ti·∫øng Vi·ªát", "C√≤n h√†ng", "K·ªá B2"),
            new Book(3, "Clean Code", "Robert C. Martin", "Khoa h·ªçc", new Date(), 5, "Ti·∫øng Anh", "H·∫øt h√†ng", "K·ªá C3"),
            new Book(4, "To√°n Cao C·∫•p", "Tr·∫ßn VƒÉn B", "Gi√°o tr√¨nh", new Date(), 12, "Ti·∫øng Vi·ªát", "C√≤n h√†ng", "K·ªá D4"),
            new Book(5, "Sherlock Holmes", "Arthur Conan Doyle", "Ti·ªÉu thuy·∫øt", new Date(), 8, "Ti·∫øng Anh", "C√≤n h√†ng", "K·ªá E5")
        );

        table.setItems(books);

        // Thanh tim kiem
        TextField tfSearch = new TextField();
        tfSearch.setPromptText("üîç T√¨m ki·∫øm s√°ch theo t√™n...");
        tfSearch.setPrefWidth(300);

        VBox tableBox = new VBox(10, tfSearch, table);
        tableBox.setPadding(new Insets(20));
        HBox.setHgrow(tableBox, Priority.ALWAYS);

        // Layout chinh
        HBox mainContent = new HBox(formScrollPane, tableBox);
        BorderPane masterLayout = new BorderPane(mainContent, null, null, null, menuBar);

        Scene scene = new Scene(masterLayout, screenSize.getWidth(), screenSize.getHeight()-30);
        stage.setTitle("Qu·∫£n l√Ω s√°ch");
        stage.setScene(scene);
        stage.show();
    }

    private Button createActionButton(String text, String color) {
        Button btn = new Button(text);
        btn.setStyle("-fx-background-color: " + color + "; -fx-text-fill: white;");
        btn.setPrefWidth(100);
        return btn;
    }
    
    private <T> void hoverColumn(TableColumn<Book, T> column) {
        column.setCellFactory(col -> new TableCell<Book, T>() {
            @Override
            protected void updateItem(T item, boolean empty) {
                super.updateItem(item, empty);
                if (empty || item == null) {
                    setText(null);
                    setTooltip(null);
                } else {
                    String text = item.toString();
                    setText(text);
                    setTooltip(new Tooltip(text));
                }
            }
        });
    }
    
     public static <S> void formatDateColumn(TableColumn<S, Date> column, String pattern) {
        column.setCellFactory(col -> new TableCell<S, Date>() {
            private final SimpleDateFormat sdf = new SimpleDateFormat(pattern);
            @Override
            protected void updateItem(Date item, boolean empty) {
                super.updateItem(item, empty);
                setText(empty || item == null ? null : sdf.format(item));
            }
        });
    }
}